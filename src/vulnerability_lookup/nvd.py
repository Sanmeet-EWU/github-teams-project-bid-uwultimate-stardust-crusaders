"""Module relating to the NVD API"""

from vulnerability_lookup.limitters import ABCLimitter, NoLimit

_NVD_API_BASE_URL = "https://services.nvd.nist.gov/rest/json/cves/2.0" 

_DEFAULT_TIMEOUT_IN_MS = 500


class NVDResponse:
    """Class representation of a NVD response."""


class NVDController:
    """Singleton handling communication with the NVD API."""

    _instance: 'NVDController'  # Singleton pattern
    _limitter: ABCLimitter  # Strategy pattern

    def __new__(cls):
        """Create or get the NVD controller singleton."""
        if not hasattr(cls, 'instance'):
            cls._instance = super(NVDController, cls).__new__(cls)
            cls._instance._limitter = NoLimit()  # Hard code for now.
        return cls._instance

    def send_request(
        params: dict[str, str],
        timeout: int = _DEFAULT_TIMEOUT_IN_MS) -> NVDResponse:
        """Create a request to send to the NVD api.

        Args:
            params (dict[str, str]):
                A dictionary of parameters to append onto the NVD API request.

        Returns:
            Response:
                Class representation of a JSON response from the API.
        """
        #return get(_NVD_API_BASE_URL, params, timeout=timeout)
