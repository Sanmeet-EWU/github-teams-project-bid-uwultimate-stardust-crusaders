"""Module containing the abstract base class for the API limitter."""

from abc import ABC, abstractmethod


class ABCLimitter(ABC):
    """Abstract base class for API limitters."""

    @abstractmethod
    def can_send(self) -> bool:
        """Determine whether the user can send another API call."""
        raise NotImplementedError("Tried to call method of an abstract class.")

    @abstractmethod
    def limit(self) -> None:
        """Method handling behavior for when the limit has been reached."""
        raise NotImplementedError("Tried to call method of an abstract class.")
