"""Module containing the Common Platform Enumeration."""

from enum import Enum
from typing import Optional

from vulnerability_lookup.cve import CVE, CVESeverity


class CPEPart(Enum):
    """Enum representation of a CPE Part definition."""
    APPLICATION = "a"
    HARDWARE = "h"
    OPERATING_SYSTEM = "o"


class CPE:
    """Class representation of a V2.3 Common Platform Enumeration

    A version 2.3 CPE, as defined by NIST shall be in the format:
        cpe:<cpe_version>:<part>:<vendor>:<product>:<version>:<update>:
        <edition>:<language>:<sw_edition>:<target_sw>:<target_hw>:<other>

    For usage with NMAP see:
    https://nmap.org/book/output-formats-cpe.html 
    https://nmap.org/book/osdetect-usage.html
    """

    def __init__(
        self,
        part: CPEPart,
        vendor: str,
        product: str,
        major_version: float,
        minor_version: Optional[float] = None,
        edition: Optional[float] = None,
        language_tag: Optional[str] = None
    ):
        """Create a new Common Platform Enumeration object."""

    def find_related_cves(
        self,
        severity: Optional[CVESeverity] = None
    ) -> tuple[CVE]:
        """Find all CVE's related to this CPE object.
        
        Args:
            severity (Optional[CVESeverity]):
                The optional CVE severity level to look for. Only
                CVE's with the matching severity level will be returned.

        Returns:
            tuple[CVE]: A tuple of corresponding CVEs.
        """
        pass
